version: '3.8'

services:


  postgres:
    container_name: PostgreSQL-Madesa
    image: bitnami/postgresql:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - APP_DB_USER=postgres
      - APP_DB_PASS=postgres
#      - APP_DB_NAME=madesa-database
      - APP_DB_NAME=postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always

    volumes:
#      - ./db:/docker-entrypoint-initdb.d/
      - postgres_data:/var/lib/postgresql/data/

    ports:
      - 5432:5432

    networks:
#      - frontend
      - backend


  pgadmin:
    container_name: PGAdmin-Madesa
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: getter@getter.com.br
      PGADMIN_DEFAULT_PASSWORD: getter@2022
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"


    networks:
      - frontend
      - backend

    depends_on:
      - postgres
    restart: unless-stopped


  #  nginx:
  #    container_name: NGINX-Madesa
  #    build: ./nginx
  #    volumes:
  #      - static_volume:/home/app/web/staticfiles
  #      - media_volume:/home/app/web/media
  #    ports:
  #      - 1337:80
  #
  #    networks:
  #      - frontend
  #      - backend
  #
  #    depends_on:
  #      - web

  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.2
    # Enables the web UI and tells Traefik to listen to docker
    ports:
      # The HTTP port
      - 80:80
      - 443:443
      - 8008:80
      - 8081:8080
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - .docker/traefik/traefik.toml:/traefik.toml
    networks:
      - frontend
      - backend

  web:
    container_name: Backend-Madesa
    environment:
      - SECRET_KEY=t6g8a4oga114*9-v1p7y!cac)(j3mby(v@a63h=py_^u+wf9yb
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/postgres
      - ALLOWED_HOSTS=*
      - DEBUG=False
    build:
      context: .
      dockerfile: Dockerfile

    command: sh -c "python manage.py makemigrations && python manage.py migrate &&  gunicorn --worker-class=gevent --workers=3 --worker-connections=1000 config.wsgi:application --bind=0.0.0.0:8000 --log-level=DEBUG"

    labels:
      - "traefik.enable=true"


    expose:
      - 8000

    ports:
      - 8000:8000

    networks:
      - backend


    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    depends_on:
      - postgres


  grafana:
    build: .docker/grafana
    container_name: Dashboard
    links:
      - postgres
    expose:
      - 3000
    ports:
      - 3000:3000
    environment:
      GF_USERS_DEFAULT_THEME: "dark"

    networks:
      - frontend
      - backend


networks:
  backend:
    driver: bridge
    name: madesa-oee-network
    external: false
    ipam:
      config:
        - subnet: 192.168.0.0/28
          gateway: 192.168.0.1

  frontend:
    driver: bridge
    name: proxy
    external: true

volumes:
  postgres_data:
  static_volume:
  media_volume:
  pgadmin:


