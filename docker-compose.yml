version: '3.8'

services:
  web:
    container_name: Backend-Madesa
    build:
      context: .
      dockerfile: Dockerfile
#    command: gunicorn --worker-class=gevent --workers=3--worker-connections=1000 config.wsgi:application --bind=0.0.0.0:8000 --log-level=DEBUG
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    expose:
      - 8000
    depends_on:
      - postgres

  postgres:
    container_name: PostgreSQL-Madesa
    image: bitnami/postgresql:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data/

    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=password
      - APP_DB_USER=parameters
      - APP_DB_PASS=parameters
      - APP_DB_NAME=parameters

    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always

    ports:
      - 5432:5432

    networks:
      - postgres


  pgadmin:
    container_name: PGAdmin-Madesa
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: getter@getter.com.br
      PGADMIN_DEFAULT_PASSWORD: getter@2022
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres
    depends_on:
      - postgres
    restart: unless-stopped


  nginx:
    container_name: NGINX-Madesa
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - 1337:80

    networks:
      - postgres

    depends_on:
      - web
      - postgres

networks:
  postgres:
    driver: bridge


volumes:
  postgres_data:
  static_volume:
  media_volume:
  pgadmin:
