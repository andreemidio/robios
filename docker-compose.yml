version: '3.8'

services:


  postgres:
    container_name: PostgreSQL-Madesa
    image: bitnami/postgresql:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data/

    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - APP_DB_USER=postgres
      - APP_DB_PASS=postgres
      - APP_DB_NAME=postgres

    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always

    ports:
      - 5432:5432

#    networks:
#      - postgres


  pgadmin:
    container_name: PGAdmin-Madesa
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: getter@getter.com.br
      PGADMIN_DEFAULT_PASSWORD: getter@2022
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
#    networks:
#      - postgres
    depends_on:
      - postgres
    restart: unless-stopped


  nginx:
    container_name: NGINX-Madesa
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - 1337:80

    #    networks:
    #      - postgres

    depends_on:
      - web


  web:
    container_name: Backend-Madesa
    environment:
      - SECRET_KEY=t6g8a4oga114*9-v1p7y!cac)(j3mby(v@a63h=py_^u+wf9yb
      - DATABASE_URL=postgres://postgres:postgres@172.25.0.2:5432/postgres
      - ALLOWED_HOSTS=*
      - DEBUG=False
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    depends_on:
      - postgres

#    networks:
#      - postgres


networks:
  postgres:
    driver: bridge


volumes:
  postgres_data:
  static_volume:
  media_volume:
  pgadmin:


